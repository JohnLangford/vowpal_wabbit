{
    "tests": [
        {
            "description": "Test 1:",
            "id": "0001_1.model_producer",
            "type": "vw_cmd_line",
            "command_line": "-k -l 20 --initial_t 128000 --power_t 1 -d train-sets/0001.dat      -f models/0001_1.model -c --passes 8 --invariant      --ngram 3 --skips 1 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/0001.stderr"
            }
        },
        {
            "description": "Test 2: checking predictions as well",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/0001_1.model -p 0001.predict --invariant",
            "comparison_files": {
                "stderr": "test-sets/ref/0001.stderr",
                "0001.predict": "pred-sets/ref/0001.predict"
            },
            "depends_on": "0001_1.model_producer"
        },
        {
            "id": "0002.model_producer_0",
            "description": "Test 3: without -d, training only",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0002.dat -f models/0002.model --invariant",
            "comparison_files": {
                "stderr": "train-sets/ref/0002.stderr"
            }
        },
        {
            "id": "0002.model_producer_1",
            "description": "Test 4: same, with -d",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0002.dat -f models/0002.model --invariant",
            "comparison_files": {
                "stdout": "train-sets/ref/0002.stdout",
                "stderr": "train-sets/ref/0002.stderr"
            },
            "depends_on": "0002.model_producer_0"
        },
        {
            "description": "Test 5: add -q .., adaptive, and more (same input, different outputs)",
            "type": "vw_cmd_line",
            "command_line": "-k --initial_t 1 --adaptive --invariant -q Tf -q ff -f models/0002a.model -d train-sets/0002.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/0002a.stderr"
            }
        },
        {
            "description": "Test 6: run predictions on Test 4 model, Pretending the labels aren't there",
            "type": "vw_cmd_line",
            "command_line": "-k -t -i models/0002.model -d train-sets/0002.dat -p 0002b.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0002b.stderr",
                "0002b.predict": "pred-sets/ref/0002b.predict"
            },
            "depends_on": "0002.model_producer_1"
        },
        {
            "description": "Test 7: using normalized adaptive updates and a low --power_t",
            "type": "vw_cmd_line",
            "command_line": "-k --power_t 0.45 -f models/0002c.model -d train-sets/0002.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/0002c.stderr"
            }
        },
        {
            "description": "Test 8: predicts on test 7 model",
            "type": "vw_cmd_line",
            "command_line": "-k -t -i models/0002c.model -d train-sets/0002.dat -p 0002c.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0002c.stderr",
                "0002c.predict": "pred-sets/ref/0002c.predict"
            }
        },
        {
            "id": "cs_test.ldf_cache_user",
            "description": "Test 9: label-dependent features with csoaa_ldf",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/cs_test.ldf -p cs_test.ldf.csoaa.predict --passes 10 --invariant --csoaa_ldf multiline --holdout_off --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/cs_test.ldf.csoaa.stderr",
                "cs_test.ldf.csoaa.predict": "train-sets/ref/cs_test.ldf.csoaa.predict"
            }
        },
        {
            "description": "Test 10: label-dependent features with wap_ldf",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/cs_test.ldf -p cs_test.ldf.wap.predict --passes 10 --invariant --wap_ldf multiline --holdout_off --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/cs_test.ldf.wap.stderr",
                "cs_test.ldf.wap.predict": "train-sets/ref/cs_test.ldf.wap.predict"
            },
            "depends_on": "cs_test.ldf_cache_user"
        },
        {
            "id": "multiclass_user_0",
            "description": "Test 11: one-against-all",
            "type": "vw_cmd_line",
            "command_line": "-k --oaa 10 -c --passes 10 -d train-sets/multiclass --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/oaa.stderr"
            }
        },
        {
            "description": "Test 12: Error Correcting Tournament",
            "type": "vw_cmd_line",
            "command_line": "-k --ect 10 --error 3 -c --passes 10 --invariant -d train-sets/multiclass --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/multiclass.stderr"
            },
            "depends_on": "multiclass_user_0"
        },
        {
            "id":"uses_wsj_small.dat.gz",
            "description": "Test 13: Run search (dagger) on wsj_small for 6 passes extra features",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dat.gz --passes 6      --search_task sequence --search 45 --search_alpha 1e-6      --search_max_bias_ngram_length 2 --search_max_quad_ngram_length 1      --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/search_wsj.stderr"
            }
        },
        {
            "description": "Test 14: Run search (searn) on wsj_small for 6 passes extra features",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dat.gz --passes 6 --search_task sequence --search 45 --search_alpha 1e-6 --search_max_bias_ngram_length 2 --search_max_quad_ngram_length 1 --holdout_off --search_passes_per_policy 3 --search_interpolation policy",
            "comparison_files": {
                "stderr": "train-sets/ref/search_wsj2.dat.stderr"
            },
            "depends_on":"uses_wsj_small.dat.gz"
        },
        {
            "description": "Test 15: LBFGS on zero derivative input",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/zero.dat --loss_function=squared -b 20 --bfgs --mem 7 --passes 5 --l2 1.0 --holdout_off",
            "comparison_files": {
                "stdout": "train-sets/ref/zero.stdout",
                "stderr": "train-sets/ref/zero.stderr"
            }
        },
        {
            "description": "Test 16: LBFGS early termination",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/rcv1_small.dat --loss_function=logistic --bfgs --mem 7 --passes 20 --termination 0.001 --l2 1.0 --holdout_off",
            "comparison_files": {
                "stdout": "train-sets/ref/rcv1_small.stdout",
                "stderr": "train-sets/ref/rcv1_small.stderr"
            }
        },
        {
            "description": "Test 17: Run LDA with 100 topics on 1000 Wikipedia articles",
            "type": "vw_cmd_line",
            "command_line": "-k --lda 100 --lda_alpha 0.01 --lda_rho 0.01 --lda_D 1000 -l 1 -b 13 --minibatch 128 -d train-sets/wiki256.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/wiki1K.stderr"
            }
        },
        {
            "description": "Test 18: Run search on seq_small for 12 passes, 4 passes per policy",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/seq_small --passes 12 --invariant --search 4 --search_task sequence --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/search_small.stderr"
            }
        },
        {
            "description": "Test 19: neural network 3-parity with 2 hidden units",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/3parity --hash all --passes 3000 -b 16 --nn 2 -l 10 --invariant -f models/0021.model --random_seed 19 --quiet --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/3parity.stderr"
            }
        },
        {
            "description": "Test 20: neural network 3-parity with 2 hidden units (predict)",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/3parity -t -i models/0021.model -p 0022.predict",
            "comparison_files": {
                "stderr": "pred-sets/ref/0022.stderr",
                "0022.predict": "pred-sets/ref/0022.predict"
            }
        },
        {
            "description": "Test 21: cubic features -- on a parity test case",
            "type": "vw_cmd_line",
            "command_line": "-k -c -f models/xxor.model -d train-sets/xxor.dat --cubic abc --passes 100 --holdout_off --progress 1.33333",
            "comparison_files": {
                "stderr": "train-sets/ref/xxor.stderr"
            }
        },
        {
            "description": "Test 22: matrix factorization -- training",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/ml100k_small_train -b 16 -q ui --rank 10      --l2 2e-6 --learning_rate 0.05 --passes 2      --decay_learning_rate 0.97 --power_t 0 -f models/movielens.reg      -c --loss_function classic --holdout_off",
            "comparison_files": {
                "stdout": "train-sets/ref/ml100k_small.stdout",
                "stderr": "train-sets/ref/ml100k_small.stderr"
            }
        },
        {
            "description": "Test 23: matrix factorization -- testing",
            "type": "vw_cmd_line",
            "command_line": "-i models/movielens.reg -t -d test-sets/ml100k_small_test",
            "comparison_files": {
                "stdout": "test-sets/ref/ml100k_small.stdout",
                "stderr": "test-sets/ref/ml100k_small.stderr"
            }
        },
        {
            "description": "Test 24: active-learning -- training",
            "type": "vw_cmd_line",
            "command_line": "-k --active --simulation --mellowness 0.000001 -d train-sets/rcv1_small.dat -l 10 --initial_t 10 --random_seed 3",
            "comparison_files": {
                "stderr": "train-sets/ref/active-simulation.t24.stderr"
            }
        },
        {
            "description": "Test 25: bagging -- training regressor",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0002.dat -f models/bs.reg.model --bootstrap 4 -p bs.reg.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/bs.reg.stderr",
                "bs.reg.predict": "train-sets/ref/bs.reg.predict"
            }
        },
        {
            "description": "Test 26: bagging -- predicting with bagged regressor",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0002.dat -i models/bs.reg.model -p bs.prreg.predict -t",
            "comparison_files": {
                "stderr": "train-sets/ref/bs.prreg.stderr",
                "bs.prreg.predict": "train-sets/ref/bs.prreg.predict"
            }
        },
        {
            "description": "Test 27: bagging -- binary classifiers",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -f models/bs.vote.model --bootstrap 4 --bs_type vote -p bs.vote.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/bs.vote.stderr",
                "bs.vote.predict": "train-sets/ref/bs.vote.predict"
            }
        },
        {
            "description": "Test 28: bagging -- predict with bagged classifier",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -i models/bs.vote.model -p bs.prvote.predict -t",
            "comparison_files": {
                "stderr": "train-sets/ref/bs.prvote.stderr",
                "bs.prvote.predict": "train-sets/ref/bs.prvote.predict"
            }
        },
        {
            "description": "Test 29: affix features",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/affix_test.dat -k -c --passes 10 --holdout_off --affix -2",
            "comparison_files": {
                "stderr": "train-sets/ref/affix_test.stderr"
            }
        },
        {
            "description": "Test 30: train --l1 regularized model",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -f models/mask.model --invert_hash mask.predict --l1 0.01",
            "comparison_files": {
                "stderr": "train-sets/ref/mask.stderr"
            }
        },
        {
            "description": "Test 31: train model using --feature_mask",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat --invert_hash remask.predict --feature_mask models/mask.model -f models/remask.model",
            "comparison_files": {
                "stderr": "train-sets/ref/remask.stderr"
            }
        },
        {
            "description": "Test 32: train model using --feature_mask and --initial_regressor",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat --feature_mask models/mask.model -i models/remask.model",
            "comparison_files": {
                "stderr": "train-sets/ref/remask.final.stderr"
            }
        },
        {
            "description": "Test 33: train model for topk recommender",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/topk.vw -f topk.model -q MF --passes 100 --cache_file topk-train.cache -k --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/topk-train.stderr"
            }
        },
        {
            "description": "Test 34: train model for topk recommender",
            "type": "vw_cmd_line",
            "command_line": "-P 1 -d train-sets/topk.vw -i topk.model --top 2 -p topk-rec.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/topk-rec.stderr",
                "topk-rec.predict": "train-sets/ref/topk-rec.predict"
            }
        },
        {
            "description": "Test 35: non-centered data-set where constant >> 0 To test the new --constant option without which performance is very weak",
            "type": "vw_cmd_line",
            "command_line": "-k --passes 100 -c --holdout_off --constant 1000 -d train-sets/big-constant.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/big-constant.stderr"
            }
        },
        {
            "description": "Test 36: new option: --progress w/ integer arg",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat --progress 10",
            "comparison_files": {
                "stderr": "train-sets/ref/progress-10.stderr"
            }
        },
        {
            "description": "Test 37: new-option: --progress w/ floating-point arg + alternate short form (-P)",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -P 0.5",
            "comparison_files": {
                "stderr": "train-sets/ref/progress-0.5.stderr"
            }
        },
        {
            "description": "Test 38: --nn without --quiet to avoid nn regressions (Needs to be a simple test, not one sensitive to symmetry breaking)",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat --nn 1",
            "comparison_files": {
                "stderr": "train-sets/ref/nn-1-noquiet.stderr"
            }
        },
        {
            "description": "Test 39: cb with dr",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_raw_cb_small.vw --cb 2 --cb_type dr --ngram 2 --skips 4 -b 24 -l 0.25",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_raw_cb_dr.stderr"
            }
        },
        {
            "description": "Test 40: cb with ips",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_raw_cb_small.vw --cb 2 --cb_type ips --ngram 2 --skips 4 -b 24 -l 0.125",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_raw_cb_ips.stderr"
            }
        },
        {
            "description": "Test 41: cb with dm",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_raw_cb_small.vw --cb 2 --cb_type dm --ngram 2 --skips 4 -b 24 -l 0.125 -f cb_dm.reg",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_raw_cb_dm.stderr"
            }
        },
        {
            "description": "Test 42: --lda --passes 2 hang regression",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/lda-2pass-hang.dat --lda 10 -c --passes 2 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/lda-2pass-hang.stderr"
            }
        },
        {
            "description": "Test 43: search sequence labeling, non-ldf train",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/sequence_data --passes 20 --invariant --search_rollout ref --search_alpha 1e-8 --search_task sequence --search 5 --holdout_off -f models/sequence_data.model",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.nonldf.train.stderr"
            }
        },
        {
            "description": "Test 44: search sequence labeling, non-ldf test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequence_data -t -i models/sequence_data.model -p sequence_data.nonldf.test.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.nonldf.test.stderr",
                "sequence_data.nonldf.test.predict": "train-sets/ref/sequence_data.nonldf.test.predict"
            }
        },
        {
            "description": "Test 45: make sure that history works",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/seq_small2 --passes 4 --search 4 --search_task sequence --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/search_small2.stderr"
            }
        },
        {
            "description": "Test 46: search sequence labeling, ldf train",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/sequence_data --passes 20      --search_rollout ref --search_alpha 1e-8      --search_task sequence_demoldf --csoaa_ldf m --search 5      --holdout_off -f models/sequence_data.ldf.model --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.ldf.train.stderr"
            }
        },
        {
            "description": "Test 47: search sequence labeling, ldf test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequence_data -t -i models/sequence_data.ldf.model -p sequence_data.ldf.test.predict --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.ldf.test.stderr",
                "sequence_data.ldf.test.predict": "train-sets/ref/sequence_data.ldf.test.predict"
            }
        },
        {
            "id": "produces_sequencespan_data.model",
            "description": "Test 48: search sequence SPAN labeling BIO, non-ldf train, no rollouts",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/sequencespan_data --passes 20 --invariant --search_rollout none --search_task sequencespan --search 7 --holdout_off -f models/sequencespan_data.model",
            "comparison_files": {
                "stderr": "train-sets/ref/sequencespan_data.nonldf.train.stderr"
            }
        },
        {
            "description": "Test 49: search sequence SPAN labeling BIO, non-ldf test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequencespan_data -t -i models/sequencespan_data.model -p sequencespan_data.nonldf.test.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/sequencespan_data.nonldf.test.stderr",
                "sequencespan_data.nonldf.test.predict": "train-sets/ref/sequencespan_data.nonldf.test.predict"
            },
            "depends_on": "produces_sequencespan_data.model"
        },
        {
            "description": "Test 50: search sequence SPAN labeling BILOU, non-ldf train",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/sequencespan_data --passes 20 --invariant      --search_rollout ref --search_alpha 1e-8 --search_task sequencespan      --search_span_bilou --search 7 --holdout_off      -f models/sequencespan_data.model",
            "comparison_files": {
                "stderr": "train-sets/ref/sequencespan_data.nonldf-bilou.train.stderr"
            }
        },
        {
            "description": "Test 51: search sequence SPAN labeling BILOU, non-ldf test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequencespan_data -t --search_span_bilou -i models/sequencespan_data.model -p sequencespan_data.nonldf-bilou.test.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/sequencespan_data.nonldf-bilou.test.stderr",
                "sequencespan_data.nonldf-bilou.test.predict": "train-sets/ref/sequencespan_data.nonldf-bilou.test.predict"
            },
            "depends_on": "produces_sequencespan_data.model"
        },
        {
            "description": "Test 52: silly test for 'argmax' task",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/argmax_data -k -c --passes 20 --search_rollout ref --search_alpha 1e-8 --search_task argmax --search 2 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/argmax_data.stderr"
            }
        },
        {
            "description": "Test 53: (holdout-broken regression) ensure we have no holdout loss of '0 h'",
            "type": "vw_cmd_line",
            "command_line": "-k -c --passes 2 -d train-sets/0001.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/holdout-loss-not-zero.stderr"
            }
        },
        {
            "description": "Test 54: stagewise poly with exponent 0.25 ##in the following stage_poly tests, there are minute differences in losses, which are not being fuzzy-diffed; ##thus the stderr is cleared (--quiet) and only comparing (fuzzy-diffed) predictions.",
            "type": "vw_cmd_line",
            "command_line": "--stage_poly --sched_exponent 0.25 --batch_sz 1000 --batch_sz_no_doubling -d train-sets/rcv1_small.dat -p stage_poly.s025.predict --quiet",
            "comparison_files": {
                "stderr": "train-sets/ref/stage_poly.s025.stderr",
                "stage_poly.s025.predict": "train-sets/ref/stage_poly.s025.predict"
            }
        },
        {
            "description": "Test 55: stagewise poly with exponent 1.0",
            "type": "vw_cmd_line",
            "command_line": "--stage_poly --sched_exponent 1.0 --batch_sz 1000 --batch_sz_no_doubling -d train-sets/rcv1_small.dat --quiet",
            "comparison_files": {
                "stderr": "train-sets/ref/stage_poly.s100.stderr"
            }
        },
        {
            "description": "Test 56: stagewise poly with exponent 0.25 and doubling batches",
            "type": "vw_cmd_line",
            "command_line": "--stage_poly --sched_exponent 0.25 --batch_sz 1000 -d train-sets/rcv1_small.dat -p stage_poly.s025.doubling.predict --quiet",
            "comparison_files": {
                "stderr": "train-sets/ref/stage_poly.s025.doubling.stderr",
                "stage_poly.s025.doubling.predict": "train-sets/ref/stage_poly.s025.doubling.predict"
            }
        },
        {
            "description": "Test 57: stagewise poly with exponent 1.0 and doubling batches",
            "type": "vw_cmd_line",
            "command_line": "--stage_poly --sched_exponent 1.0 --batch_sz 1000 -d train-sets/rcv1_small.dat -p stage_poly.s100.doubling.predict --quiet",
            "comparison_files": {
                "stderr": "train-sets/ref/stage_poly.s100.doubling.stderr",
                "stage_poly.s100.doubling.predict": "train-sets/ref/stage_poly.s100.doubling.predict"
            }
        },
        {
            "description": "Test 58: library test, train the initial model",
            "type": "vw_cmd_line",
            "command_line": "-c -k -d train-sets/library_train -f models/library_train.w -q st --passes 100 --hash all --noconstant --csoaa_ldf m --holdout_off",
            "comparison_files": {
                "stdout": "train-sets/ref/library_train.stdout",
                "stderr": "train-sets/ref/library_train.stderr"
            }
        },
        {
            "description": "Test 59: cb_adf, sharedfeatures",
            "type": "vw_cmd_line",
            "command_line": " --dsjson --chain_hash --cb_adf -d train-sets/no_shared_features.json",
            "comparison_files": {
                "stderr": "train-sets/ref/no_shared_features.stderr"
            }
        },
        {
            "description": "Test 60: empty test, bad builds (without make clean) sometimes cause a SEGV even on empty input",
            "type": "bash_script",
            "command_line": "./empty_test.sh {vw}",
            "comparison_files": {
                "stderr": "train-sets/ref/empty-set.stderr"
            }
        },
        {
            "description": "Test 61: daemon test",
            "type": "bash_script",
            "command_line": "./daemon-test.sh",
            "comparison_files": {
                "stdout": "test-sets/ref/vw-daemon.stdout"
            }
        },
        {
            "description": "Test 62: SVM linear kernel",
            "type": "vw_cmd_line",
            "command_line": "--ksvm --l2 1 --reprocess 5 -b 18 -p ksvm_train.linear.predict -d train-sets/rcv1_smaller.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/ksvm_train.linear.stderr",
                "ksvm_train.linear.predict": "train-sets/ref/ksvm_train.linear.predict"
            }
        },
        {
            "description": "Test 63: SVM polynomial kernel",
            "type": "vw_cmd_line",
            "command_line": "--ksvm --l2 1 --reprocess 5 -b 18 --kernel poly -p ksvm_train.poly.predict -d train-sets/rcv1_smaller.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/ksvm_train.poly.stderr",
                "ksvm_train.poly.predict": "train-sets/ref/ksvm_train.poly.predict"
            }
        },
        {
            "description": "Test 64: SVM rbf kernel",
            "type": "vw_cmd_line",
            "command_line": "--ksvm --l2 1 --reprocess 5 -b 18 --kernel rbf -p ksvm_train.rbf.predict -d train-sets/rcv1_smaller.dat",
            "stderr": "train-sets/ref/ksvm_train.rbf.stderr",
            "comparison_files": {
                "ksvm_train.rbf.predict": "train-sets/ref/ksvm_train.rbf.predict"
            }
        },
        {
            "description": "Test 65: Run search (dagger) on an entity-relation recognitions data set, er_small, for 6 passes with constraints",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/er_small.vw --passes 6 --search_task entity_relation --search 10 --constraints --search_alpha 1e-8",
            "comparison_files": {
                "stderr": "train-sets/ref/search_er.stderr"
            }
        },
        {
            "description": "Test 66: Train a depenency parser with search (dagger) on wsj_small.dparser.vw.gz for 6 passes",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dparser.vw.gz --passes 6 --search_task dep_parser --search 12  --search_alpha 1e-4 --search_rollout oracle --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/search_dep_parser.stderr"
            }
        },
        {
            "description": "Test 67: classification with data from dictionaries, (eg embeddings or gazetteers) -- note that this is impossible without, dictionaries because --ignore w; also test to make sure gzipped dicts, work and dictionary redundancy checking works",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/dictionary_test.dat --binary --ignore w --holdout_off --passes 32 --dictionary w:dictionary_test.dict --dictionary w:dictionary_test.dict.gz --dictionary_path train-sets",
            "comparison_files": {
                "stderr": "train-sets/ref/dictionary_test.stderr"
            }
        },
        {
            "description": "Test 68: Search for multiclass classification",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/multiclass.sch --passes 20 --search_task multiclasstask --search 10 --search_alpha 1e-4 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/search_multiclass.stderr"
            }
        },
        {
            "description": "Test 69: (see Test 43/Test 44): search sequence labeling, with selective branching",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequence_data -t -i models/sequence_data.model -p sequence_data.nonldf.beam.test.predict --search_metatask selective_branching --search_max_branch 10 --search_kbest 10",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.nonldf.beam.test.stderr",
                "sequence_data.nonldf.beam.test.predict": "train-sets/ref/sequence_data.nonldf.beam.test.predict"
            }
        },
        {
            "description": "Test 70: (see Test 46/47) search sequence labeling, ldf test, with selective branching",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/sequence_data -t -i models/sequence_data.ldf.model -p sequence_data.ldf.beam.test.predict --search_metatask selective_branching --search_max_branch 10 --search_kbest 10 --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.ldf.beam.test.stderr",
                "sequence_data.ldf.beam.test.predict": "train-sets/ref/sequence_data.ldf.beam.test.predict"
            }
        },
        {
            "description": "Test 71: autolink",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0002.dat --autolink 1 --examples 100 -p 0002.autolink.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/0002.autolink.stderr",
                "0002.autolink.predict": "train-sets/ref/0002.autolink.predict"
            }
        },
        {
            "description": "Test 72: train FTRL-Proximal",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -f models/0001_ftrl.model --passes 1 --ftrl --ftrl_alpha 0.01 --ftrl_beta 0 --l1 2",
            "comparison_files": {
                "stderr": "train-sets/ref/0001_ftrl.stderr"
            }
        },
        {
            "description": "Test 73: test FTRL-Proximal",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/0001_ftrl.model -p 0001_ftrl.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0001_ftrl.stderr",
                "0001_ftrl.predict": "pred-sets/ref/0001_ftrl.predict"
            }
        },
        {
            "description": "Test 74: cb evaluation",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_cb_eval --cb 2 --eval",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_cb_eval.stderr"
            }
        },
        {
            "description": "Test 75: Log_multi",
            "type": "vw_cmd_line",
            "command_line": "--log_multi 10 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/log_multi.stderr"
            }
        },
        {
            "description": "Test 76: cbify, epsilon-greedy",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --epsilon 0.05 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_epsilon.stderr"
            }
        },
        {
            "description": "Test 77: cbify, tau first",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --first 5 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_first.stderr"
            }
        },
        {
            "description": "Test 78: cbify, bag",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --bag 7 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_bag.stderr"
            }
        },
        {
            "description": "Test 79: cbify, cover",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cover 3 -d train-sets/multiclass --nounif",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_cover.stderr"
            }
        },
        {
            "description": "Test 80: lrq empty namespace",
            "type": "vw_cmd_line",
            "command_line": "--lrq aa3 -d train-sets/0080.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/0080.stderr"
            }
        },
        {
            "description": "Test 81: train FTRL-PiSTOL",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -f models/ftrl_pistol.model --passes 1 --pistol",
            "comparison_files": {
                "stderr": "train-sets/ref/ftrl_pistol.stderr"
            }
        },
        {
            "description": "Test 82: test FTRL-PiSTOL",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/ftrl_pistol.model -p ftrl_pistol.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/ftrl_pistol.stderr",
                "ftrl_pistol.predict": "pred-sets/ref/ftrl_pistol.predict"
            }
        },
        {
            "description": "Test 83: check redefine functionality",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0080.dat --redefine := --redefine y:=: --redefine x:=arma --ignore x -q yy",
            "comparison_files": {
                "stderr": "train-sets/ref/redefine.stderr"
            }
        },
        {
            "description": "Test 84: check cb_adf",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf -d train-sets/cb_test.ldf --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_mtr.stderr"
            }
        },
        {
            "description": "Test 85: check multilabel_oaa",
            "type": "vw_cmd_line",
            "command_line": "--multilabel_oaa 10 -d train-sets/multilabel -p multilabel.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/multilabel.stderr",
                "multilabel.predict": "pred-sets/ref/multilabel.predict"
            }
        },
        {
            "description": "Test 86: check --csoaa_rank on csoaa_ldf",
            "type": "vw_cmd_line",
            "command_line": "--csoaa_ldf multiline --csoaa_rank -d train-sets/cs_test_multilabel.ldf -p multilabel_ldf.predict --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/multilabel_ldf.stderr",
                "multilabel_ldf.predict": "pred-sets/ref/multilabel_ldf.predict"
            }
        },
        {
            "description": "Test 87: check --rank_all on csoaa_ldf",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf --rank_all -d train-sets/cb_test.ldf -p cb_adf_rank.predict --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_rank.stderr",
                "cb_adf_rank.predict": "pred-sets/ref/cb_adf_rank.predict"
            }
        },
        {
            "description": "Test 88: named labels at training time",
            "type": "vw_cmd_line",
            "command_line": "--named_labels det,noun,verb --oaa 3 -d train-sets/test_named  -k -c --passes 10 --holdout_off -f models/test_named.model",
            "comparison_files": {
                "stderr": "train-sets/ref/test_named_train.stderr"
            }
        },
        {
            "description": "Test 89: named labels at prediction",
            "type": "vw_cmd_line",
            "command_line": "-i models/test_named.model -t -d train-sets/test_named -p test_named.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/test_named_test.stderr",
                "test_named.predict": "pred-sets/ref/test_named.predict"
            }
        },
        {
            "description": "Test 90: named labels at training time (csoaa)",
            "type": "vw_cmd_line",
            "command_line": "--named_labels det,noun,verb --csoaa 3 -d train-sets/test_named_csoaa  -k -c --passes 10 --holdout_off -f models/test_named_csoaa.model",
            "comparison_files": {
                "stderr": "train-sets/ref/test_named_csoaa_train.stderr"
            }
        },
        {
            "description": "Test 91: named labels at prediction (csoaa)",
            "type": "vw_cmd_line",
            "command_line": "-i models/test_named_csoaa.model -t -d train-sets/test_named_csoaa -p test_named_csoaa.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/test_named_csoaa_test.stderr",
                "test_named_csoaa.predict": "pred-sets/ref/test_named_csoaa.predict"
            }
        },
        {
            "description": "Test 92: check -q :: and -oaa inverse hash",
            "type": "skip for now",
            "command_line": "|f a b c |e x y z\n2 |f a y c |e x\n' |      {VW} --oaa 3 -q :: --invert_hash inv_hash.cmp &&          tail -n +2 inv_hash.cmp > inv_hash.cmp.new &&              rm inv_hash.cmp &&                  mv inv_hash.cmp.new inv_hash.cmp",
            "comparison_files": {
                "stderr": "train-sets/ref/inv_hash.stderr",
                "inv_hash.cmp": "pred-sets/ref/inv_hash.cmp"
            }
        },
        {
            "description": "Test 93:  check cb_adf with doubly robust option",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf --rank_all -d train-sets/cb_test.ldf -p cb_adf_dr.predict --cb_type dr",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_dr.stderr",
                "cb_adf_dr.predict": "pred-sets/ref/cb_adf_dr.predict"
            }
        },
        {
            "description": "Test 94: experience replay version of test 1",
            "type": "vw_cmd_line",
            "command_line": "-k -l 20 --initial_t 128000 --power_t 1 -d train-sets/0001.dat      -c --passes 8 --invariant      --ngram 3 --skips 1 --holdout_off --replay_b 100",
            "comparison_files": {
                "stderr": "train-sets/ref/0001-replay.stderr"
            }
        },
        {
            "description": "Test 95: named labels at training time (csoaa) with experience replay",
            "type": "vw_cmd_line",
            "command_line": "--named_labels det,noun,verb --csoaa 3      -d train-sets/test_named_csoaa -k -c --passes 10 --holdout_off      -f models/test_named_csoaa.model --replay_c 100",
            "comparison_files": {
                "stderr": "train-sets/ref/test_named_csoaa_train-replay.stderr"
            }
        },
        {
            "description": "Test 96: backwards compatibility",
            "type": "vw_cmd_line",
            "type": "skip for now",
            "command_line": "|f a b c |e x y z\n2 |f a y c |e x\n' |      {VW} -i simple_model --invert_hash inv_hash.cmp &&          tail -n +2 inv_hash.cmp",
            "comparison_files": {
                "stderr": "test-sets/ref/backwards.stderr",
                "stdout": "test-sets/ref/backwards.stdout"
            }
        },
        {
            "description": "Test 97:",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -f models/0097.model --save_resume",
            "comparison_files": {
                "stderr": "train-sets/ref/0097.stderr"
            }
        },
        {
            "description": "Test 98: checking predictions as well",
            "type": "vw_cmd_line",
            "command_line": "--preserve_performance_counters -d train-sets/0001.dat -i models/0097.model -p 0098.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0098.stderr",
                "0098.predict": "pred-sets/ref/0098.predict"
            }
        },
        {
            "description": "Test 99: checking predictions with testing",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -i models/0097.model -p 0099.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0099.stderr",
                "0099.predict": "pred-sets/ref/0099.predict"
            }
        },
        {
            "description": "Test 100: action costs, no rollout",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/sequence_data --passes 20 --invariant --search_rollout none --search_task sequence_ctg --search 5 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/sequence_data.ctg.train.stderr"
            }
        },
        {
            "description": "Test 101: active cover",
            "type": "vw_cmd_line",
            "command_line": "--loss_function logistic --binary --active_cover -d train-sets/rcv1_mini.dat -f models/active_cover.model",
            "comparison_files": {
                "stderr": "train-sets/ref/active_cover.stderr"
            }
        },
        {
            "description": "Test 102: active cover (predict)",
            "type": "vw_cmd_line",
            "command_line": "-i models/active_cover.model -t -d test-sets/rcv1_small_test.data -p active_cover.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/active_cover.stderr",
                "active_cover.predict": "pred-sets/ref/active_cover.predict"
            }
        },
        {
            "description": "Test 103: active cover oracular",
            "type": "vw_cmd_line",
            "command_line": "--loss_function logistic --binary --active_cover --oracular -d ./train-sets/rcv1_small.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/active_cover_oracular.stderr"
            }
        },
        {
            "description": "Test 104: check cb_adf",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf -d train-sets/cb_test.ldf --cb_type mtr --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_mtr.stderr"
            }
        },
        {
            "description": "Test 105: train FTRL-Proximal early stopping",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -f models/0001_ftrl.model --passes 10 --ftrl --ftrl_alpha 3.0 --ftrl_beta 0 --l1 0.9 --cache",
            "comparison_files": {
                "stderr": "train-sets/ref/0001_ftrl_holdout.stderr"
            }
        },
        {
            "description": "Test 106: test FTRL-Proximal early stopping prediction",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/0001_ftrl.model -p 0001_ftrl_holdout.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/0001_ftrl_holdout_106.stderr",
                "0001_ftrl_holdout.predict": "pred-sets/ref/0001_ftrl_holdout.predict"
            }
        },
        {
            "description": "Test 107: train FTRL-Proximal no early stopping",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -f models/0001_ftrl.model --passes 10 --ftrl --ftrl_alpha 0.01 --ftrl_beta 0 --l1 2 --cache --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/0001_ftrl_holdout_off.stderr"
            }
        },
        {
            "description": "Test 108: test FTRL-Proximal no early stopping",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/0001_ftrl.model -p 0001_ftrl_holdout_off.predict --holdout_off",
            "comparison_files": {
                "stderr": "test-sets/ref/0001_ftrl_holdout_off.stderr",
                "0001_ftrl_holdout_off.predict": "pred-sets/ref/0001_ftrl_holdout_off.predict"
            }
        },
        {
            "description": "Test 109: --probabilities --oaa",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/probabilities.dat --probabilities --oaa=4 --loss_function=logistic -p oaa_probabilities.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/oaa_probabilities.stderr",
                "oaa_probabilities.predict": "pred-sets/ref/oaa_probabilities.predict"
            }
        },
        {
            "description": "Test 110: --probabilities --csoaa_ldf=mc",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cs_test.ldf --probabilities --csoaa_ldf=mc --loss_function=logistic -p csoaa_ldf_probabilities.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/csoaa_ldf_probabilities.stderr",
                "csoaa_ldf_probabilities.predict": "pred-sets/ref/csoaa_ldf_probabilities.predict"
            }
        },
        {
            "description": "Test 111: Train a depenency parser with neural network and one_learner approach (lols)",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dparser.vw.gz -b 20 --search_task dep_parser --search 25 --search_alpha 1e-5 --search_rollin mix_per_roll --search_rollout oracle --one_learner --nn 5 --ftrl --search_history_length 3 --root_label 8",
            "comparison_files": {
                "stderr": "train-sets/ref/search_dep_parser_one_learner.stderr"
            }
        },
        {
            "description": "Test 112: Train a depenency parser with cost_to_go",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dparser.vw.gz -b 20 --passes 6 --search_task dep_parser --search 25 --search_alpha 1e-5 --search_rollin mix_per_roll --search_rollout none --holdout_off --search_history_length 3 --root_label 8 --cost_to_go",
            "comparison_files": {
                "stderr": "train-sets/ref/search_dep_parser_cost_to_go.stderr"
            }
        },
        {
            "description": "Test 113: Predictions with confidences",
            "type": "vw_cmd_line",
            "command_line": "--confidence -d ./train-sets/rcv1_micro.dat --initial_t 0.1 -p confidence.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/confidence.stderr",
                "confidence.preds": "pred-sets/ref/confidence.preds"
            }
        },
        {
            "description": "Test 114: Over size example test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/x.txt",
            "comparison_files": {
                "stderr": "train-sets/ref/oversize.stderr"
            }
        },
        {
            "description": "Test 115: Long Line test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/long_line -c -k",
            "comparison_files": {
                "stderr": "train-sets/ref/long_line.stderr"
            }
        },
        {
            "description": "Test 116: MWT test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_eval --multiworld_test f -p cb_eval.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_eval.stderr",
                "cb_eval.preds": "pred-sets/ref/cb_eval.preds"
            }
        },
        {
            "description": "Test 117: Audit regressor of ftrl model (from test #107)",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -i models/0001_ftrl.model  --audit_regressor ftrl.audit_regr",
            "comparison_files": {
                "stderr": "train-sets/ref/ftrl_audit_regr.stderr",
                "ftrl.audit_regr": "train-sets/ref/ftrl.audit_regr"
            }
        },
        {
            "description": "Test 118: Audit regressor of csoaa model (from test #95)",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/test_named_csoaa -i models/test_named_csoaa.model --audit_regressor csoaa.audit_regr",
            "comparison_files": {
                "stderr": "train-sets/ref/csoaa_audit_regr.stderr",
                "csoaa.audit_regr": "train-sets/ref/csoaa.audit_regr"
            }
        },
        {
            "description": "Test 119: MWT learn test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_eval --multiworld_test f --learn 2 -p mwt_learn.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/mwt_learn.stderr",
                "mwt_learn.preds": "pred-sets/ref/mwt_learn.preds"
            }
        },
        {
            "description": "Test 120: MWT learn exclude test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_eval --multiworld_test f --learn 2 --exclude_eval -p mwt_learn_exclude.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/mwt_learn_exclude.stderr",
                "mwt_learn_exclude.preds": "pred-sets/ref/mwt_learn_exclude.preds"
            }
        },
        {
            "description": "Test 121: cb_explore",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_raw_cb_small.vw --cb_explore 2 --ngram 2 --skips 4 -b 24 -l 0.25 -p rcv1_raw_cb_explore.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_raw_cb_explore.stderr",
                "rcv1_raw_cb_explore.preds": "pred-sets/ref/rcv1_raw_cb_explore.preds"
            }
        },
        {
            "description": "Test 122: Predictions with confidences after training",
            "type": "vw_cmd_line",
            "command_line": "--confidence --confidence_after_training --initial_t 0.1 -d ./train-sets/rcv1_small.dat -p confidence_after_training.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/confidence_after_training.stderr",
                "confidence_after_training.preds": "pred-sets/ref/confidence_after_training.preds"
            }
        },
        {
            "description": "Test 123: cb_eval save/load #1",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_eval1 --multiworld_test f -f mwt.model -p cb_eval1.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_eval1.stderr",
                "cb_eval1.preds": "pred-sets/ref/cb_eval1.preds"
            }
        },
        {
            "description": "Test 124: cb_eval save/load #2",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_eval2 -i mwt.model -p cb_eval2.preds",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_eval2.stderr",
                "cb_eval2.preds": "pred-sets/ref/cb_eval2.preds"
            }
        },
        {
            "description": "Test 125: arc-eager trasition-based dependency parser",
            "type": "vw_cmd_line",
            "command_line": "-k -c -d train-sets/wsj_small.dparser.vw.gz -b 20 --search_task dep_parser --search 26 --search_alpha 1e-5 --search_rollin mix_per_roll --search_rollout oracle --one_learner --search_history_length 3 --root_label 8 --transition_system 2 --passes 8",
            "comparison_files": {
                "stderr": "train-sets/ref/search_dep_parser_arceager.stderr"
            }
        },
        {
            "description": "Test 126: recall tree hello world",
            "type": "vw_cmd_line",
            "command_line": "--quiet -d train-sets/gauss1k.dat.gz -f models/recall_tree_g100.model --recall_tree 100 -b 20 --loss_function logistic",
            "comparison_files": {}
        },
        {
            "description": "Test 127: recall_tree hello world predict-from-saved-model",
            "type": "vw_cmd_line",
            "command_line": "-t -d train-sets/gauss1k.dat.gz -i models/recall_tree_g100.model",
            "comparison_files": {
                "stderr": "train-sets/ref/recall_tree_gauss1k.stderr",
                "stdout": "train-sets/ref/recall_tree_gauss1k.stdout"
            }
        },
        {
            "description": "Test 128: cb_explore_adf with epsilon-greedy exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --epsilon 0.1 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_epsilon.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_epsilon.stderr",
                "cbe_adf_epsilon.predict": "pred-sets/ref/cbe_adf_epsilon.predict"
            }
        },
        {
            "description": "Test 129: cb_explore_adf with softmax exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --softmax --lambda 1 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_softmax.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_softmax.stderr",
                "cbe_adf_softmax.predict": "pred-sets/ref/cbe_adf_softmax.predict"
            }
        },
        {
            "description": "Test 130: cb_explore_adf with bagging exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --bag 3 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_bag.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_bag.stderr",
                "cbe_adf_bag.predict": "pred-sets/ref/cbe_adf_bag.predict"
            }
        },
        {
            "description": "Test 131: cb_explore_adf with explore-first exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --first 2 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_first.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_first.stderr",
                "cbe_adf_first.predict": "pred-sets/ref/cbe_adf_first.predict"
            }
        },
        {
            "description": "Test 132: train a poisson model",
            "type": "vw_cmd_line",
            "command_line": "--quiet -d train-sets/poisson.dat -f models/poisson.model --loss_function poisson --link poisson -b 2 -p poisson.train.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/poisson.train.stderr",
                "poisson.train.predict": "pred-sets/ref/poisson.train.predict"
            }
        },
        {
            "description": "Test 133: train a poisson model without invariant updates",
            "type": "vw_cmd_line",
            "command_line": "--quiet -d train-sets/poisson.dat -f models/poisson.normalized.model --normalized --loss_function poisson --link poisson -b 2 -l 0.1 -p poisson.train.normalized.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/poisson.train.normalized.stderr",
                "poisson.train.normalized.predict": "pred-sets/ref/poisson.train.normalized.predict"
            }
        },
        {
            "description": "Test 134: second order online learning",
            "type": "vw_cmd_line",
            "command_line": "--OjaNewton -d train-sets/0001.dat -f models/second_order.model -p second_order.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/second_order.stderr",
                "second_order.predict": "pred-sets/ref/second_order.predict"
            }
        },
        {
            "description": "Test 135: cb explore adf",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_adf_crash_1.data -f models/cb_adf_crash.model --cb_explore_adf --epsilon 0.05",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_crash1.stderr"
            }
        },
        {
            "description": "Test 136: cb explore adf predict",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cb_adf_crash_2.data -i models/cb_adf_crash.model -t",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_crash2.stderr"
            }
        },
        {
            "description": "Test 137: Fix for regression introduced by badeedb. Ensure audit output continues to work correctly in the presence of anon features. Github issue 1038 (https://github.com/JohnLangford/vowpal_wabbit/issues/1038)",
            "type": "vw_cmd_line",
            "command_line": "--audit -d train-sets/audit.dat --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/audit.stderr",
                "stdout": "train-sets/ref/audit.stdout"
            }
        },
        {
            "description": "Test 138: cb_explore_adf with cover exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --cover 3 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_cover.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_cover.stderr",
                "cbe_adf_cover.predict": "pred-sets/ref/cbe_adf_cover.predict"
            }
        },
        {
            "description": "Test 139: cb_explore_adf with cover exploration + double robust",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --cover 3 --cb_type dr -d train-sets/cb_test.ldf --noconstant -p cbe_adf_cover_dr_139.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_cover_dr.stderr",
                "cbe_adf_cover_dr_139.predict": "pred-sets/ref/cbe_adf_cover_dr.predict"
            }
        },
        {
            "description": "Test 140: marginal features",
            "type": "vw_cmd_line",
            "command_line": "--marginal f  -d train-sets/marginal_features --noconstant --initial_numerator 0.5 --initial_denominator 1.0 --decay 0.001 --holdout_off -c -k --passes 100 -f marginal_model",
            "comparison_files": {
                "stderr": "train-sets/ref/marginal.stderr"
            }
        },
        {
            "description": "Test 141: marginal features test",
            "type": "vw_cmd_line",
            "command_line": "-i marginal_model  -d train-sets/marginal_features --noconstant -t",
            "comparison_files": {
                "stderr": "train-sets/ref/marginal_test.stderr"
            }
        },
        {
            "description": "Test 142: Evaluate exploration on contextal bandit data",
            "type": "vw_cmd_line",
            "command_line": "--explore_eval --epsilon 0.2 -d train-sets/cb_test.ldf --noconstant -p explore_eval.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/explore_eval.stderr",
                "explore_eval.predict": "pred-sets/ref/explore_eval.predict"
            }
        },
        {
            "description": "Test 143: Test 1 using JSON",
            "type": "vw_cmd_line",
            "command_line": "-k -l 20 --initial_t 128000 --power_t 1 -d train-sets/0001.json --json --chain_hash      -c --passes 8 --invariant      --ngram 3 --skips 1 --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/0001.json.stderr"
            }
        },
        {
            "description": "Test 144: cb_explore_adf with cover exploration + double robust",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --cover 3 --cb_type dr -d train-sets/cb_test.json --json --chain_hash --noconstant -p cbe_adf_cover_dr_144.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_cover_dr.json.stderr",
                "cbe_adf_cover_dr_144.predict": "pred-sets/ref/cbe_adf_cover_dr.predict"
            }
        },
        {
            "description": "Test 145: mix labeled and unlabeled examples with --bootstrap bug: https://github.com/JohnLangford/vowpal_wabbit/issues/1111",
            "type": "vw_cmd_line",
            "command_line": "--bootstrap 2 -d train-sets/labeled-unlabeled-mix.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/labeled-unlabeled-mix.stderr"
            }
        },
        {
            "description": "Test 146: cb_explore_adf with cover exploration + double robust (using more than 256 examples)",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --cover 3 --cb_type dr -d train-sets/cb_test256.json --json --chain_hash --noconstant -p cbe_adf_cover_dr256.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_cover_dr256.json.stderr",
                "cbe_adf_cover_dr256.predict": "pred-sets/ref/cbe_adf_cover_dr256.predict"
            }
        },
        {
            "description": "Test 147: --scores --oaa",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/probabilities.dat --scores --oaa=4 -p oaa_scores.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/oaa_scores.stderr",
                "oaa_scores.predict": "pred-sets/ref/oaa_scores.predict"
            }
        },
        {
            "description": "Test 148:  check cb_adf with direct method option",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf -d train-sets/cb_test.ldf -p cb_adf_dm.predict --cb_type dm",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_dm.stderr",
                "cb_adf_dm.predict": "pred-sets/ref/cb_adf_dm.predict"
            }
        },
        {
            "description": "Test 149: initial_weight option is used",
            "type": "fix me",
            "command_line": "| feature:1' | {VW} -a --initial_weight 0.1 --initial_t 0.3",
            "comparison_files": {
                "stderr": "train-sets/ref/initial_weight.stderr",
                "stdout": "train-sets/ref/initial_weight.stdout"
            }
        },
        {
            "description": "Test 150:  Test --sparse_weights with 148",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf -d train-sets/cb_test.ldf -p cb_adf_dm.predict --cb_type dm --sparse_weights",
            "comparison_files": {
                "stderr": "train-sets/ref/sparse.stderr"
            }
        },
        {
            "description": "Test 151: lrqfa",
            "type": "vw_cmd_line",
            "type": "vw_cmd_line",
            "command_line": "--lrqfa aa3 -d train-sets/0080.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/0151.stderr"
            }
        },
        {
            "description": "Test 152: daemon on the foreground test",
            "command_line": "daemon-test.sh --foreground",
            "type": "Script - skip me for now",
            "comparison_files": {
                "stdout": "test-sets/ref/vw-daemon.stdout"
            }
        },
        {
            "description": "Test 153: marginal features",
            "type": "vw_cmd_line",
            "command_line": "--marginal f  -d train-sets/marginal_features --noconstant --initial_numerator 0.5 --initial_denominator 1.0 --decay 0.001 --holdout_off -c -k --passes 100  --compete",
            "comparison_files": {
                "stderr": "train-sets/ref/marginal_compete.stderr"
            }
        },
        {
            "description": "Test 154: ignore linear",
            "type": "vw_cmd_line",
            "command_line": "-k --cache_file ignore_linear.cache --passes 10000 --holdout_off -d train-sets/0154.dat --noconstant --ignore_linear x -q xx",
            "comparison_files": {
                "stderr": "train-sets/ref/ignore_linear.stderr"
            }
        },
        {
            "description": "Test 155: checking audit_regressor with --save_resume model",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -i models/0097.model --save_resume --audit_regressor 0097.audit_regr",
            "comparison_files": {
                "stderr": "train-sets/ref/0097.audit_regr.stderr",
                "0097.audit_regr": "train-sets/ref/0097.audit_regr"
            }
        },
        {
            "description": "Test 156: --cubic regression verification",
            "command_line": "./cubic-test.sh ${VW}",
            "type": "Script - skip me for now",
            "comparison_files": {}
        },
        {
            "description": "Test 157: save_resume without --preserve_performce_counters does not alter performance counters over multiple passes",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat -f models/sr.model  --passes 2 -c -k  -P 50 --save_resume",
            "comparison_files": {
                "stderr": "train-sets/ref/157.stderr"
            }
        },
        {
            "description": "Test 158: test decision service json parsing",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/decisionservice.json --dsjson --cb_explore_adf --epsilon 0.2 --quadratic GT -P 1 -p cbe_adf_dsjson.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_dsjson.stderr",
                "cbe_adf_dsjson.predict": "pred-sets/ref/cbe_adf_dsjson.predict"
            }
        },
        {
            "description": "Test 159: test --bootstrap & --binary interaction",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_mini.dat --bootstrap 5 --binary -c -k --passes 2",
            "comparison_files": {
                "stderr": "train-sets/ref/bootstrap_and_binary.stderr"
            }
        },
        {
            "description": "Test 160: test --bootstrap & --oaa interaction (Also adds -q :: and -P1 to get & verify perfect predictions in 2nd pass)",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/multiclass --bootstrap 4 --oaa 10 -q :: --leave_duplicate_interactions  -c -k --passes 2 --holdout_off -P1",
            "comparison_files": {
                "stderr": "train-sets/ref/bootstrap_and_oaa.stderr"
            }
        },
        {
            "description": "Test 161: --classweight",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/0001.dat --classweight 1:2,0:3.1,-1:5",
            "comparison_files": {
                "stderr": "train-sets/ref/classweight.stderr"
            }
        },
        {
            "description": "Test 162: --classweight with multiclass",
            "type": "vw_cmd_line",
            "command_line": "--oaa 10 -d train-sets/multiclass --classweight 4:0,7:0.1,2:10 --classweight 10:3",
            "comparison_files": {
                "stderr": "train-sets/ref/classweight_multiclass.stderr"
            }
        },
        {
            "description": "Test 163: --classweight with multiclass",
            "type": "vw_cmd_line",
            "command_line": "--recall_tree 10 -d train-sets/multiclass --classweight 4:0,7:0.1 --classweight 2:10,10:3",
            "comparison_files": {
                "stderr": "train-sets/ref/classweight_recall_tree.stderr"
            }
        },
        {
            "description": "Test 164: cs_active low mellowness",
            "type": "vw_cmd_line",
            "command_line": "--cs_active 3 -d ../test/train-sets/cs_test --cost_max 2 --mellowness 0.01 --simulation --adax",
            "comparison_files": {
                "stderr": "train-sets/ref/cs_active_0.01.stderr"
            }
        },
        {
            "description": "Test 165: cs_active high mellowness",
            "type": "vw_cmd_line",
            "command_line": "--cs_active 3 -d ../test/train-sets/cs_test --cost_max 2 --mellowness 1.0 --simulation --adax",
            "comparison_files": {
                "stderr": "train-sets/ref/cs_active_1.0.stderr"
            }
        },
        {
            "description": "Test 166: hash_seed train",
            "type": "vw_cmd_line",
            "command_line": "--hash_seed 5 -d train-sets/rcv1_mini.dat --holdout_off --passes 2 -f hash_seed5.model -c -k --ngram 2 -q ::",
            "comparison_files": {
                "stderr": "train-sets/ref/hash_seed_train.stderr"
            }
        },
        {
            "description": "Test 167: hash_seed test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_mini.dat -i hash_seed5.model -t",
            "comparison_files": {
                "stderr": "train-sets/ref/hash_seed_test.stderr"
            }
        },
        {
            "description": "Test 168: test cb with dm",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_raw_cb_small.vw -t -i cb_dm.reg",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_raw_cb_dm_test.stderr"
            }
        },
        {
            "description": "Test 169: test cbify large",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_multiclass.dat --cbify 2 --epsilon 0.05",
            "comparison_files": {
                "stderr": "train-sets/ref/rcv1_multiclass.stderr"
            }
        },
        {
            "description": "Test 170: cbify adf, epsilon-greedy",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cb_explore_adf --epsilon 0.05 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_epsilon_adf.stderr"
            }
        },
        {
            "description": "Test 171: cbify cs, epsilon-greedy",
            "type": "vw_cmd_line",
            "command_line": "--cbify 3 --cbify_cs --epsilon 0.05 -d train-sets/cs_cb",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_epsilon_cs.stderr"
            }
        },
        {
            "description": "Test 172: cbify adf cs, epsilon-greedy",
            "type": "vw_cmd_line",
            "command_line": "--cbify 3 --cbify_cs --cb_explore_adf --epsilon 0.05 -d train-sets/cs_cb",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_epsilon_cs_adf.stderr"
            }
        },
        {
            "description": "Test 173: cbify adf, regcb",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cb_explore_adf --cb_type mtr --regcb --mellowness 0.01 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_regcb.stderr"
            }
        },
        {
            "description": "Test 174: cbify adf, regcbopt",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cb_explore_adf --cb_type mtr --regcbopt --mellowness 0.01 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_regcbopt.stderr"
            }
        },
        {
            "description": "Test 175: cbify ldf, regcbopt",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cs_test.ldf --cbify_ldf --cb_type mtr --regcbopt --mellowness 0.01",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_ldf_regcbopt.stderr"
            }
        },
        {
            "description": "Test 176: same model on cluster mode",
            "command_line": "-model-test.sh",
            "type": "Script - skip me for now",
            "comparison_files": {}
        },
        {
            "description": "Test 177: check --audit output is reproducible",
            "type": "Script - skip me for now",
            "command_line": "|f a b c |e x y z\n2 |f a y c |e x\n' | {VW} --oaa 3 -q ef --audit",
            "comparison_files": {
                "stdout": "train-sets/ref/audit2.stdout"
            }
        },
        {
            "description": "Test 178 cb_adf, sharedfeatures",
            "type": "vw_cmd_line",
            "command_line": " --dsjson --chain_hash --cb_adf -d train-sets/no_shared_features.json",
            "comparison_files": {
                "stderr": "train-sets/ref/no_shared_features.stderr"
            }
        },
        {
            "description": "Test 179 warm_cb warm start",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 3 --interaction 7 --choices_lambda 8 --warm_start_update --interaction_update -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb.stderr"
            }
        },
        {
            "description": "Test 180 warm_cb warm start with lambda set containing 0/1",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 3 --interaction 7 --choices_lambda 8 --lambda_scheme 2 --warm_start_update --interaction_update -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_lambda_zeroone.stderr"
            }
        },
        {
            "description": "Test 181 warm_cb warm start with warm start update turned off",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 3 --interaction 7 --choices_lambda 8 --interaction_update -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_no_ws_upd.stderr"
            }
        },
        {
            "description": "Test 182 warm_cb warm start with interaction update turned off",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.0 --warm_start 3 --interaction 7 --choices_lambda 8 --warm_start_update -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_no_int_upd.stderr"
            }
        },
        {
            "description": "Test 183 warm_cb warm start with bandit warm start type (Sim-Bandit)",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 3 --interaction 7 --choices_lambda 1 --warm_start_update --interaction_update --sim_bandit -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_simbandit.stderr"
            }
        },
        {
            "description": "Test 184 warm_cb warm start with CYC supervised corruption",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 10 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 3 --interaction 7 --choices_lambda 8 --warm_start_update --interaction_update --corrupt_type_warm_start 2 --corrupt_prob_warm_start 0.5 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_cyc.stderr"
            }
        },
        {
            "description": "Test 185 warm_cb warm start with input cost-sensitive examples",
            "type": "vw_cmd_line",
            "command_line": "--warm_cb 3 --cb_explore_adf --cb_type mtr --epsilon 0.05 --warm_start 1 --interaction 2 --choices_lambda 8 --warm_start_update --interaction_update --warm_cb_cs -d train-sets/cs_cb",
            "comparison_files": {
                "stderr": "train-sets/ref/warm_cb_cs.stderr"
            }
        },
        {
            "description": "Test 186 test counting examples with holdout_after option",
            "type": "vw_cmd_line",
            "command_line": "-k -P 100 --holdout_after 500 -d train-sets/0002.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/holdout_after.stderr"
            }
        },
        {
            "description": "Test 187 test counting examples with holdout_after option with 2 passes on the training set",
            "type": "vw_cmd_line",
            "command_line": "-k -P 100 --holdout_after 500 -d train-sets/0002.dat -c --passes 2",
            "comparison_files": {
                "stderr": "train-sets/ref/holdout_after_2passes.stderr"
            }
        },
        {
            "description": "Test 188 test cb_adf with softmax",
            "type": "vw_cmd_line",
            "command_line": "--cb_adf --rank_all -d train-sets/cb_adf_sm.data -p cb_adf_sm.predict --cb_type sm",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_adf_sm.stderr",
                "cb_adf_sm.predict": "pred-sets/ref/cb_adf_sm.predict"
            }
        },
        {
            "description": "Test 189 test dsjson parser correctly processes checkpoint and dangling observation lines",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/b1848_dsjson_parser_regression.txt --dsjson --chain_hash --cb_explore_adf -P 1",
            "comparison_files": {
                "stderr": "train-sets/ref/b1848_dsjson_parser_regression.stderr"
            }
        },
        {
            "description": "Test 190: one-against-all with subsampling",
            "type": "vw_cmd_line",
            "command_line": "-k --oaa 10 --oaa_subsample 5 -c --passes 10 -d train-sets/multiclass --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/oaa_subsample.stderr"
            }
        },
        {
            "description": "Test 191: train coin betting",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/0001.dat -f models/ftrl_coin.model --passes 1 --coin",
            "comparison_files": {
                "stderr": "train-sets/ref/ftrl_coin.stderr"
            }
        },
        {
            "description": "Test 192: test coin betting",
            "type": "vw_cmd_line",
            "command_line": "-k -t -d train-sets/0001.dat -i models/ftrl_coin.model -p ftrl_coin.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/ftrl_coin.stderr",
                "ftrl_coin.predict": "pred-sets/ref/ftrl_coin.predict"
            }
        },
        {
            "description": "Test 193: malformed examples, onethread, strict_parse failure",
            "command_line": "tive-test.sh {VW} -d train-sets/malformed.dat --onethread --strict_parse",
            "type": "Script - skip me for now",
            "comparison_files": {
                "stderr": "train-sets/ref/malformed-onethread-strict_parse.stderr"
            }
        },
        {
            "description": "Test 194: malformed examples, strict_parse failure",
            "command_line": "tive-test.sh {VW} -d train-sets/malformed.dat --strict_parse",
            "type": "Script - skip me for now",
            "comparison_files": {
                "stderr": "train-sets/ref/malformed-strict_parse.stderr"
            }
        },
        {
            "description": "Test 195: malformed examples success",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/malformed.dat --onethread",
            "comparison_files": {
                "stderr": "train-sets/ref/malformed.stderr"
            }
        },
        {
            "description": "Test 196: online contextual memory tree",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/rcv1_smaller.dat --memory_tree 10 --learn_at_leaf --max_number_of_labels 2 --dream_at_update 0 --dream_repeats 3 --online --leaf_example_multiplier 10 --alpha 0.1 -l 0.001 -b 15 --passes 1 --loss_function squared --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/cmt_rcv1_smaller_online.stderr"
            }
        },
        {
            "description": "Test 197: offline contextual memory tree",
            "type": "vw_cmd_line",
            "command_line": "-k -d train-sets/rcv1_smaller.dat --memory_tree 10 --learn_at_leaf --max_number_of_labels 2 --dream_at_update 0 --dream_repeats 3 --leaf_example_multiplier 10 --alpha 0.1 -l 0.001 -b 15 -c --passes 2 --loss_function squared --holdout_off",
            "comparison_files": {
                "stderr": "train-sets/ref/cmt_rcv1_smaller_offline.stderr"
            }
        },
        {
            "description": "Test 198: test cb_sample",
            "type": "vw_cmd_line",
            "command_line": "--cb_sample --cb_explore_adf -d test-sets/cb_sample_seed.data -p cb_sample_seed.predict --random_seed 1234",
            "comparison_files": {
                "cb_sample_seed.predict": "pred-sets/ref/cb_sample_seed.predict"
            }
        },
        {
            "description": "Test 199: CCB train then test",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/ccb_test.dat --ccb_explore_adf -p ccb_test.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/ccb_test.stderr",
                "ccb_test.predict": "train-sets/ref/ccb_test.predict"
            }
        },
        {
            "description": "Test 200: cb_explore_adf with huge lambda softmax exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --softmax --lambda 100000 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_softmax_biglambda.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_softmax_biglambda.stderr",
                "cbe_adf_softmax_biglambda.predict": "pred-sets/ref/cbe_adf_softmax_biglambda.predict"
            }
        },
        {
            "description": "Test 201: Test memory corruption issue in ccb_explore_adf where mtr was leaving a prediction behind",
            "type": "vw_cmd_line",
            "command_line": "--ccb_explore_adf --ring_size 7 -d train-sets/ccb_reuse_small.data",
            "comparison_files": {
                "stderr": "train-sets/ref/ccb_reuse_small.stderr"
            }
        },
        {
            "description": "Test 202: Test memory corruption issue in ccb_explore_adf where mtr was leaving a prediction behind",
            "type": "vw_cmd_line",
            "command_line": "--ccb_explore_adf --ring_size 20 --dsjson --chain_hash -d train-sets/ccb_reuse_medium.dsjson",
            "comparison_files": {
                "stderr": "train-sets/ref/ccb_reuse_medium.stderr"
            }
        },
        {
            "description": "Test 203: Basic test of cluster. Can't use the VW replacer as it will think this is a VW command append things like --onethread",
            "type": "bash_script fixme",
            "command_line": "cluster_test.py --vw ../build/vowpalwabbit/vw --spanning_tree ../build/cluster/spanning_tree      --test_file test-sets/0001.dat --data_files train-sets/0001.dat train-sets/0002.dat      --prediction_file cluster.predict",
            "comparison_files": {
                "stderr": "test-sets/ref/cluster.stderr",
                "stdout": "test-sets/ref/cluster.stdout",
                "cluster.predict": "pred-sets/ref/cluster.predict"
            }
        },
        {
            "description": "Test 204: Test if options that are negative numbers are handled correctly",
            "type": "vw_cmd_line",
            "command_line": "--classweight -1:0.5 --no_stdin",
            "comparison_files": {
                "stderr": "test-sets/ref/negative-num-option.stderr"
            }
        },
        {
            "description": "Test 205: test cb_dro with softmax",
            "type": "vw_cmd_line",
            "command_line": "--cb_dro --cb_adf --rank_all -d train-sets/cb_adf_sm.data -p cb_dro_adf_sm.predict --cb_type sm",
            "comparison_files": {
                "stderr": "train-sets/ref/cb_dro_adf_sm.stderr",
                "cb_dro_adf_sm.predict": "pred-sets/ref/cb_dro_adf_sm.predict"
            }
        },
        {
            "description": "Test 206: Tests segfault that used to happen when audit, cache and interactions were combined.",
            "type": "vw_cmd_line",
            "command_line": "-c -k --passes 2 -d train-sets/cache_interaction_audit.txt -q st --audit",
            "comparison_files": {
                "stdout": "train-sets/ref/cache_interaction_audit.stdout",
                "stderr": "train-sets/ref/cache_interaction_audit.stderr"
            }
        },
        {
            "description": "Test 207: Enable chain hash option for json example",
            "type": "bash_script fixme",
            "command_line": "{vw} --audit --json --chain_hash -d train-sets/chain_hash_json_test.json --invert_hash chain_hash_json_result.cmp --chain_hash &&      tail -n +2 chain_hash_json_result.cmp > chain_hash_json_result.cmp.new &&          rm chain_hash_json_result.cmp &&              mv chain_hash_json_result.cmp.new chain_hash_json_result.cmp",
            "comparison_files": {
                "stderr": "test-sets/ref/chain_hash_json_test.stderr",
                "stdout": "test-sets/ref/chain_hash_json_test.stdout",
                "chain_hash_json_result.cmp": "test-sets/ref/chain_hash_json_result.cmp"
            }
        },
        {
            "description": "Test 208: Enable chain hash option for text example",
            "type": "bash_script fixme",
            "command_line": "--audit -d train-sets/chain_hash_text_test.dat --invert_hash chain_hash_text_result.cmp --chain_hash &&      tail -n +2 chain_hash_text_result.cmp > chain_hash_text_result.cmp.new &&          rm chain_hash_text_result.cmp &&              mv chain_hash_text_result.cmp.new chain_hash_text_result.cmp",
            "comparison_files": {
                "stderr": "test-sets/ref/chain_hash_text_result.stderr",
                "stdout": "test-sets/ref/chain_hash_text_result.stdout",
                "chain_hash_text_result.cmp": "test-sets/ref/chain_hash_text_result.cmp"
            }
        },
        {
            "description": "Test 209: Test override epsilon value saved in a model",
            "type": "vw_cmd_line",
            "command_line": "-i model-sets/epsilon.model -d train-sets/override_epsilon.txt --epsilon 0.3 -p override_epsilon.preds",
            "comparison_files": {
                "stderr": "pred-sets/ref/override_epsilon.stderr",
                "override_epsilon.preds": "pred-sets/ref/override_epsilon.preds"
            }
        },
        {
            "description": "Test 210: Ensure that all weights that exist in the model are present in the invert_hash output. Even if Audit did not see it. SkipC# - Do not remove this - this test breaks test generation by creating an infinite sized list containing this test case (many times)",
            "todo": "Split this into two tests with dependencies",
            "type": "bash_script fixme",
            "command_line": "-d train-sets/inv_hash_load_model_data1.txt -f inv_hash_load_model.vw --noconstant      && {vw} -d train-sets/inv_hash_load_model_data2.txt -i inv_hash_load_model.vw --noconstant --readable_model inv_hash_load_model.readable.txt --invert_hash inv_hash_load_model.invert.txt",
            "comparison_files": {
                "inv_hash_load_model.invert.txt": "train-sets/ref/inv_hash_load_model.invert.txt",
                "inv_hash_load_model.readable.txt": "train-sets/ref/inv_hash_load_model.readable.txt"
            }
        },
        {
            "description": "Test 211: cb_explore_adf with rnd exploration",
            "type": "vw_cmd_line",
            "command_line": "--cb_explore_adf --rnd 1 -d train-sets/cb_test.ldf --noconstant -p cbe_adf_rnd.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_rnd.stderr",
                "cbe_adf_rnd.predict": "pred-sets/ref/cbe_adf_rnd.predict"
            }
        },
        {
            "description": "Test 212: Slates sanity check",
            "type": "vw_cmd_line",
            "command_line": "--slates -d train-sets/slates_simple.txt -p slates_simple.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/slates_simple.stderr",
                "slates_simple.predict": "pred-sets/ref/slates_simple.predict"
            }
        },
        {
            "description": "Test 213: offset_tree, 2 actions",
            "type": "vw_cmd_line",
            "command_line": "--ot 2 -k -d train-sets/offset_tree_000.dat -p offset_tree_000.pred -P 1",
            "comparison_files": {
                "stderr": "test-sets/ref/offset_tree_000.stderr",
                "offset_tree_000.pred": "pred-sets/ref/offset_tree_000.pred"
            }
        },
        {
            "description": "Test 214: offset_tree, 3 actions",
            "type": "vw_cmd_line",
            "command_line": "--ot 3 -k -d train-sets/offset_tree_001.dat -p offset_tree_001.pred -P 1",
            "comparison_files": {
                "stderr": "test-sets/ref/offset_tree_001.stderr",
                "offset_tree_001.pred": "pred-sets/ref/offset_tree_001.pred"
            }
        },
        {
            "description": "Test 215: offset_tree, 4 actions",
            "type": "vw_cmd_line",
            "command_line": "--ot 4 -k -d train-sets/offset_tree_002.dat -p offset_tree_002.pred -P 1",
            "comparison_files": {
                "stderr": "test-sets/ref/offset_tree_002.stderr",
                "offset_tree_002.pred": "pred-sets/ref/offset_tree_002.pred"
            }
        },
        {
            "description": "Test 216: Regression test for crash on unlabelled data",
            "type": "vw_cmd_line",
            "command_line": "--dsjson --chain_hash --slates -d train-sets/slates_simple_unlabeled.dsjson",
            "comparison_files": {
                "stderr": "train-sets/ref/slates_simple_unlabeled.stderr"
            }
        },
        {
            "description": "Test 217: check plt training",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/multilabel -f plt.model --plt 10 --sgd",
            "comparison_files": {
                "stderr": "train-sets/ref/plt_multilabel.stderr"
            }
        },
        {
            "description": "Test 218: check default plt prediction",
            "type": "vw_cmd_line",
            "command_line": "-t -d train-sets/multilabel -i plt.model -p plt_multilabel.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/plt_multilabel_predict.stderr",
                "plt_multilabel.predict": "pred-sets/ref/plt_multilabel.predict"
            }
        },
        {
            "description": "Test 219: check plt top-1 prediction",
            "type": "vw_cmd_line",
            "command_line": "-t -d train-sets/multilabel -i plt.model -p plt_top1_multilabel.predict --top_k 1",
            "comparison_files": {
                "stderr": "train-sets/ref/plt_top1_multilabel_predict.stderr",
                "plt_top1_multilabel.predict": "pred-sets/ref/plt_top1_multilabel.predict"
            }
        },
        {
            "description": "Test 220: daemon test with json",
            "type": "vw_cmd_line",
            "command_line": "on-test.sh --json",
            "type": "Script - skip me for now",
            "comparison_files": {
                "stdout": "test-sets/ref/vw-daemon.stdout"
            }
        },
        {
            "description": "Test 221: cbify adf, squarecb",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cb_explore_adf --cb_type mtr --squarecb --gamma_scale 500 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_squarecb.stderr"
            }
        },
        {
            "description": "Test 222: cbify adf, squarecb-elim",
            "type": "vw_cmd_line",
            "command_line": "--cbify 10 --cb_explore_adf --cb_type mtr --squarecb --elim --gamma_scale 10 --mellowness 0.001 -d train-sets/multiclass",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_squarecb_elim.stderr"
            }
        },
        {
            "description": "Test 223: cbify ldf, squarecb",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cs_test.ldf --cbify_ldf --cb_type mtr --squarecb --gamma_scale 500",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_ldf_squarecb.stderr"
            }
        },
        {
            "description": "Test 224: cbify ldf, squarecb-elim",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cs_test.ldf --cbify_ldf --cb_type mtr --squarecb --elim --gamma_scale 10 --mellowness 0.001",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_ldf_squarecb_elim.stderr"
            }
        },
        {
            "description": "Test 225: cbify regression dataset.  Use it with cats.",
            "type": "vw_cmd_line",
            "command_line": "--cbify 4 --cbify_reg --min_value=185 --max_value=23959 --bandwidth 1 -d train-sets/regression/cbify-reg.dat --passes 1 -b 18 --coin --loss_option 1",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify-reg-cats.stderr"
            }
        },
        {
            "description": "Test 226: cats train",
            "type": "vw_cmd_line",
            "command_line": "--cats 4 --min_value=185 --max_value=23959 --bandwidth 1 -d train-sets/cats.acpx --passes 1 -b 18 --coin --loss_option 1 -f cats.model",
            "comparison_files": {
                "stderr": "train-sets/ref/cats-train.stderr"
            }
        },
        {
            "description": "Test 227: cats predict",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cats.acpx -i cats.model -p cats.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cats-predict.stderr",
                "cats.predict": "pred-sets/ref/cats.predict"
            }
        },
        {
            "id": "cats-pdf.model_producer",
            "description": "Test 228: cats-pdf train",
            "type": "vw_cmd_line",
            "command_line": "--cats_pdf 4 --min_value=185 --max_value=23959 --bandwidth 1 -d train-sets/cats.acpx --passes 1 -b 18 --coin --loss_option 1 -f cats-pdf.model",
            "comparison_files": {
                "stderr": "train-sets/ref/cats-pdf-train.stderr"
            }
        },
        {
            "description": "Test 229: cats-pdf predict",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/cats.acpx -i cats-pdf.model -p cats-pdf.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cats-pdf-predict.stderr",
                "cats-pdf.predict": "pred-sets/ref/cats-pdf.predict"
            },
            "depends_on": "cats-pdf.model_producer"
        },
        {
            "description": "Test 230: cbify-reg",
            "type": "vw_cmd_line",
            "command_line": "--cbify 2048 --cbify_reg --min_value=185 --max_value=23959 --bandwidth 4  -d train-sets/regression/cbify-reg.dat --coin --loss_option 1",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_reg.stderr"
            }
        },
        {
            "description": "Test 231: cbify-reg cb_discrete",
            "type": "vw_cmd_line",
            "command_line": "--cbify 2048 --cbify_reg --cb_discrete --min_value=185 --max_value=23959 -d train-sets/regression/cbify-reg.dat --coin --loss_option 1",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_reg_discrete.stderr"
            }
        },
        {
            "description": "Test 232: cbify-reg discrete cats_tree",
            "type": "vw_cmd_line",
            "command_line": "--cbify 2048 --cbify_reg --cb_discrete --cats_tree 2048 --min_value=185 --max_value=23959 -d train-sets/regression/cbify-reg.dat --coin --loss_option 1",
            "comparison_files": {
                "stderr": "train-sets/ref/cbify_reg_discrete_cats.stderr"
            }
        },
        {
            "description": "Test 233: CCB first slot loss",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/ccb_losses.txt --ccb_explore_adf --epsilon 0 --cb_type ips",
            "comparison_files": {
                "stderr": "train-sets/ref/ccb_1slot_loss.stderr"
            }
        },
        {
            "description": "Test 234: CCB all slots loss",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/ccb_losses.txt --ccb_explore_adf --epsilon 0 --cb_type ips --all_slots_loss",
            "comparison_files": {
                "stderr": "train-sets/ref/ccb_allslots_loss.stderr"
            }
        },
        {
            "description": "Test 235: big feature poison test 1",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/big_feature_poison.dat --interactions aaaaa --noconstant",
            "comparison_files": {
                "stderr": "train-sets/ref/big_feature_poison.stderr",
                "stdout": "train-sets/ref/big_feature_poison.stdout"
            }
        },
        {
            "description": "Test 236: big feature poison test 2",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/big_feature_poison.dat --interactions aaaaa --noconstant --power_t 0",
            "comparison_files": {
                "stderr": "train-sets/ref/big_feature_poison_2.stderr",
                "stdout": "train-sets/ref/big_feature_poison_2.stdout"
            }
        },
        {
            "description": "Test 237: test decision service json parsing including chain hashing",
            "type": "vw_cmd_line",
            "command_line": "-d train-sets/decisionservice.json --dsjson --chain_hash --cb_explore_adf --epsilon 0.2 --quadratic GT -P 1 -p cbe_adf_dsjson_chain_hash.predict",
            "comparison_files": {
                "stderr": "train-sets/ref/cbe_adf_dsjson_chain_hash.stderr",
                "cbe_adf_dsjson_chain_hash.predict": "pred-sets/ref/cbe_adf_dsjson_chain_hash.predict"
            }
        },
        {
            "description": "Test 238: Evaluate exploration with uniform probabilities for each action and uniform distributed policy(--epsilon 1)",
            "type": "vw_cmd_line",
            "command_line": "--explore_eval --epsilon 1 -d train-sets/explore_eval.dat",
            "comparison_files": {
                "stderr": "train-sets/ref/explore_eval_uniform_distributed_policy.stderr"
            }
        }
    ]
}
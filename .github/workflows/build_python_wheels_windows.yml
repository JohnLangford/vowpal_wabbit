name: Build Windows Python Wheels

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-2016
    strategy:
      matrix:
        config:
        - { version: 3.6, include_dir_name: python3.6m, vcpkg_commit: aa095559917a495b160986e9ad50556431509ace}
#         - { version: 3.7, include_dir_name: python3.7m}
#         - { version: 3.8, include_dir_name: python3.8}
    steps:
      - uses: actions/checkout@v2
      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ${VCPKG_INSTALLATION_ROOT}/buildtrees
            ${VCPKG_INSTALLATION_ROOT}/installed
            ${VCPKG_INSTALLATION_ROOT}/packages
          key: ${{ runner.os }}-${{ matrix.config.version }}
      - name: Set up Python ${{ matrix.config.version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.version }}
      - name: Boostrap and install vcpkg
        shell: bash -l {0}
        run: |
          cd ${VCPKG_INSTALLATION_ROOT}
          git fetch --unshallow
          git checkout ${{ matrix.config.vcpkg_commit }}
          .\\bootstrap-vcpkg.bat
          .\\vcpkg.exe --triplet x64-windows install zlib boost-system boost-program-options boost-test boost-align boost-foreach boost-python boost-math python3 
      - name: Build wheel
        shell: bash -l {0}
        run: |
          pip install wheel
          pip wheel . -w wheel_output --global-option --vcpkg-root="${VCPKG_INSTALLATION_ROOT}" --verbose
      - name: Upload built wheel
        uses: actions/upload-artifact@v1
        with:
          name: wheel_${{ matrix.config.version }}
          path: wheel_output
  test:
    needs: build
    runs-on: windows-2016
    strategy:
      matrix:
        config:
        - { version: 3.6, include_dir_name: python3.6m}
#         - { version: 3.7, include_dir_name: python3.7m}
#         - { version: 3.8, include_dir_name: python3.8}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.config.version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.version }}
      - name: Download wheel
        uses: actions/download-artifact@v1
        with:
          name: wheel_${{ matrix.config.version }}
      - name: Test wheel
        shell: bash
        run: |
          export wheel_files=(wheel_${{ matrix.config.version }}/*)
          export wheel_file="${wheel_files[0]}"
          echo Installing ${wheel_file}...
          pip install -r requirements.txt
          pip install pytest
          pip install ${wheel_file}
          python -m pytest .\\python\\tests\\

name: Build MacOS Python Wheels

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-10.15
    strategy:
      matrix:
        config:
        - { version: 3.5, include_dir_name: python3.5m/}
        - { version: 3.6, include_dir_name: python3.6m/}
        - { version: 3.7, include_dir_name: python3.7m/}
        - { version: 3.8, include_dir_name: python3.8/}
    steps:
      # v1 must be used because newer versions require a node.js version that will not run on this old image.
      - uses: actions/checkout@v2
      - name: Build wheel
        shell: bash
        run: |
          conda info 
          CONDA_BASE=$(conda info --base)
          echo $CONDA_BASE
          conda init bash
          source $CONDA_PREFIX/etc/profile.d/conda.sh
          conda activate
          conda install python=${{ matrix.config.version }} wheel boost py-boost zlib
          pip wheel . -w wheel_output/ --global-option --cmake-options="-DSTATIC_LINK_VW_JAVA=On;-DPython_INCLUDE_DIR='${{ matrix.config.base_path }}include/${{ matrix.config.include_dir_name }}'" --verbose
      - name: Upload built wheel
        uses: actions/upload-artifact@v1
        with:
          name: wheel_${{ matrix.config.version }}
          path: wheel_output/
  # test:
  #   needs: build
  #   container:
  #     image: python:${{ matrix.config.version }}
  #   runs-on: ubuntu-latest
  #   continue-on-error: ${{ matrix.config.experimental }}
  #   strategy:
  #     matrix:
  #       config:
  #       - { version: 3.5, experimental: false }
  #       - { version: 3.6, experimental: false }
  #       - { version: 3.7, experimental: false }
  #       - { version: 3.8, experimental: false }
  #       # This will fail until there is a docker image released for 3.9
  #       - { version: 3.9, experimental: true }
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Download Wheel
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: wheel_${{ matrix.config.version }}
  #     - name: Test wheel
  #       shell: bash
  #       run: |
  #         export wheel_files=(wheel_${{ matrix.config.version }}/*)
  #         export wheel_file="${wheel_files[0]}"
  #         echo Installing ${wheel_file}...
  #         pip install -r requirements.txt
  #         pip install pytest
  #         pip install ${wheel_file}
  #         python -m pytest ./python/tests/
resources:
- repo: self

pool:
  name: Azure Pipelines
  vmImage: 'windows-2019'

steps:
#- task: VisualStudioTestPlatformInstaller@1
#  inputs:
#    packageFeedSelector: 'nugetOrg' # Options: nugetOrg, customFeed, netShare
#    versionSelector: 'latestStable' # Required when packageFeedSelector == NugetOrg || PackageFeedSelector == CustomFeed# Options: latestPreRelease, latestStable, specificVersion
#    #testPlatformVersion: # Required when versionSelector == SpecificVersion
#    #customFeed: # Required when packageFeedSelector == CustomFeed
#    #username: # Optional
#    #password: # Optional
#    #netShare: # Required when packageFeedSelector == NetShare
- task: NuGetToolInstaller@1
  displayName: Nuget 5.4.0
  inputs:
    versionSpec: '5.4.0'
- task: NuGetCommand@2
  displayName: Nuget Restore
  inputs:
    command: 'restore'
    restoreSolution: './vowpalwabbit/vw.sln'
- task: VSBuild@1
  displayName: Build vw.sln
  inputs:
    solution: './vowpalwabbit/vw.sln'
    vsVersion: '16.0'
    msbuildArgs: '/nr:false'
    platform: 'x64'
    configuration: 'Release'

#- script: CALL .scripts/restore.cmd
#  displayName: 'Restore dependencies'
#  env:
#    nugetPath: $(Build.SourcesDirectory)\vowpalwabbit\.nuget\nuget.exe
#  failOnStderr: true
# - script: CALL .scripts/build.cmd
#   displayName: 'Build vw.sln'
#  env:
#    nugetPath: $(Build.SourcesDirectory)\vowpalwabbit\.nuget\nuget.exe
#  failOnStderr: true
- script: CALL .scripts/test.cmd
  displayName: 'Run tests'
#  env:
#    nugetPath: $(Build.SourcesDirectory)\vowpalwabbit\.nuget\nuget.exe
  failOnStderr: false
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/vowpalwabbit/out/test/Release/x64/*.trx'
#- script: CALL .scripts/package.cmd
#  displayName: 'Package artifacts'
#  env:
#    nugetPath: $(Build.SourcesDirectory)\vowpalwabbit\.nuget\nuget.exe
#    Tag: -$(Build.SourceVersion)--$(Build.BuildId)
#    SourceInfo: 'Built from commit id: $(Build.SourceVersion)'
#  failOnStderr: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: target'
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)\vowpalwabbit\out\target
    ArtifactName: target
  condition: succeededOrFailed()
#- task: PublishBuildArtifacts@1
#  displayName: 'Publish Artifact: package'
#  inputs:
#    PathtoPublish: $(Build.SourcesDirectory)\vowpalwabbit\out\package
#    ArtifactName: package
#  condition: succeededOrFailed()
